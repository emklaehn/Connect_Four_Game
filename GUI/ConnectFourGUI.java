/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author emklaehn, ZachReeee, eap22
 */
import java.awt.event.*;
import javax.swing.*;
import java.awt.*;
import javax.swing.table.*;

public class ConnectFourGUI extends javax.swing.JFrame {

    private Player playerOne;
    private Player playerTwo;
    private Board game = new Board(playerOne, playerTwo);
    private int count = 0;
    private Player playerChosen;
    private String playerImage;
    private int row = 0;
    
    /**
     * Creates new form ConnectFourGUI
     */
    public ConnectFourGUI() {
        initComponents();
        nameBox.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ColumnSelectors = new javax.swing.ButtonGroup();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        restartBox = new javax.swing.JDialog();
        stopGame = new javax.swing.JButton();
        playAgain = new javax.swing.JButton();
        question = new javax.swing.JLabel();
        winnerOutput = new javax.swing.JLabel();
        nameBox = new javax.swing.JDialog();
        playerOneName = new javax.swing.JLabel();
        playerTwoName = new javax.swing.JLabel();
        nameOk = new javax.swing.JButton();
        responseOne = new javax.swing.JTextField();
        responseTwo = new javax.swing.JTextField();
        title = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        submit = new javax.swing.JButton();
        gameResponse = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        columnOne = new javax.swing.JRadioButton();
        columnTwo = new javax.swing.JRadioButton();
        columnThree = new javax.swing.JRadioButton();
        columnFour = new javax.swing.JRadioButton();
        columnFive = new javax.swing.JRadioButton();
        columnSix = new javax.swing.JRadioButton();
        columnSeven = new javax.swing.JRadioButton();
        gameBoard = new javax.swing.JPanel();
        row0col0 = new javax.swing.JLabel();
        row0col1 = new javax.swing.JLabel();
        row0col2 = new javax.swing.JLabel();
        row0col3 = new javax.swing.JLabel();
        row0col4 = new javax.swing.JLabel();
        row0col5 = new javax.swing.JLabel();
        row0col6 = new javax.swing.JLabel();
        row1col0 = new javax.swing.JLabel();
        row1col1 = new javax.swing.JLabel();
        row1col2 = new javax.swing.JLabel();
        row1col3 = new javax.swing.JLabel();
        row1col4 = new javax.swing.JLabel();
        row1col5 = new javax.swing.JLabel();
        row1col6 = new javax.swing.JLabel();
        row2col0 = new javax.swing.JLabel();
        row2col1 = new javax.swing.JLabel();
        row2col2 = new javax.swing.JLabel();
        row2col3 = new javax.swing.JLabel();
        row2col4 = new javax.swing.JLabel();
        row2col5 = new javax.swing.JLabel();
        row2col6 = new javax.swing.JLabel();
        row3col0 = new javax.swing.JLabel();
        row3col1 = new javax.swing.JLabel();
        row3col2 = new javax.swing.JLabel();
        row3col3 = new javax.swing.JLabel();
        row3col4 = new javax.swing.JLabel();
        row3col5 = new javax.swing.JLabel();
        row3col6 = new javax.swing.JLabel();
        row4col0 = new javax.swing.JLabel();
        row4col1 = new javax.swing.JLabel();
        row4col2 = new javax.swing.JLabel();
        row4col3 = new javax.swing.JLabel();
        row4col4 = new javax.swing.JLabel();
        row4col5 = new javax.swing.JLabel();
        row4col6 = new javax.swing.JLabel();
        row5col0 = new javax.swing.JLabel();
        row5col1 = new javax.swing.JLabel();
        row5col2 = new javax.swing.JLabel();
        row5col3 = new javax.swing.JLabel();
        row5col4 = new javax.swing.JLabel();
        row5col5 = new javax.swing.JLabel();
        row5col6 = new javax.swing.JLabel();

        ColumnSelectors.add(jRadioButtonMenuItem1);
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });

        restartBox.setBounds(new java.awt.Rectangle(350, 350, 450, 350));
        restartBox.setPreferredSize(new java.awt.Dimension(700, 700));

        stopGame.setText("No");
        stopGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopGameActionPerformed(evt);
            }
        });

        playAgain.setText("Yes");
        playAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAgainActionPerformed(evt);
            }
        });

        question.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        question.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        question.setText("Would you like to play again?");

        winnerOutput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        winnerOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout restartBoxLayout = new javax.swing.GroupLayout(restartBox.getContentPane());
        restartBox.getContentPane().setLayout(restartBoxLayout);
        restartBoxLayout.setHorizontalGroup(
            restartBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, restartBoxLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(playAgain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(stopGame)
                .addGap(72, 72, 72))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, restartBoxLayout.createSequentialGroup()
                .addContainerGap(376, Short.MAX_VALUE)
                .addGroup(restartBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(question, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(winnerOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(64, 64, 64))
        );
        restartBoxLayout.setVerticalGroup(
            restartBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, restartBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(winnerOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(question, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 433, Short.MAX_VALUE)
                .addGroup(restartBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopGame)
                    .addComponent(playAgain))
                .addGap(23, 23, 23))
        );

        nameBox.setAlwaysOnTop(true);
        nameBox.setBounds(new java.awt.Rectangle(350, 350, 400, 350));

        playerOneName.setText("Enter Player One Name: ");

        playerTwoName.setText("Enter Player Two Name: ");

        nameOk.setText("OK");
        nameOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameOkActionPerformed(evt);
            }
        });

        responseOne.setText("Player One");

        responseTwo.setText("Player Two");

        javax.swing.GroupLayout nameBoxLayout = new javax.swing.GroupLayout(nameBox.getContentPane());
        nameBox.getContentPane().setLayout(nameBoxLayout);
        nameBoxLayout.setHorizontalGroup(
            nameBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nameBoxLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(nameBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(playerTwoName)
                    .addComponent(playerOneName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(nameBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(responseTwo, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(responseOne))
                .addGap(67, 67, 67))
            .addGroup(nameBoxLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(nameOk)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        nameBoxLayout.setVerticalGroup(
            nameBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nameBoxLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(nameBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerOneName)
                    .addComponent(responseOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nameBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerTwoName)
                    .addComponent(responseTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(nameOk)
                .addGap(34, 34, 34))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        title.setText("Connect Four");

        submit.setText("OK");
        ColumnSelectors.add(submit);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });

        gameResponse.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        gameResponse.setText("Waiting for response...");

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gameResponse, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gameResponse, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        buttonPanel.setLayout(new java.awt.GridLayout(1, 7));

        ColumnSelectors.add(columnOne);
        columnOne.setText("Column 1");
        buttonPanel.add(columnOne);

        ColumnSelectors.add(columnTwo);
        columnTwo.setText("Column 2");
        columnTwo.setActionCommand("");
        buttonPanel.add(columnTwo);

        ColumnSelectors.add(columnThree);
        columnThree.setText("Column 3");
        buttonPanel.add(columnThree);

        ColumnSelectors.add(columnFour);
        columnFour.setText("Column 4");
        buttonPanel.add(columnFour);

        ColumnSelectors.add(columnFive);
        columnFive.setText("Column 5");
        buttonPanel.add(columnFive);

        ColumnSelectors.add(columnSix);
        columnSix.setText("Column 6");
        buttonPanel.add(columnSix);

        ColumnSelectors.add(columnSeven);
        columnSeven.setText("Column 7");
        buttonPanel.add(columnSeven);

        gameBoard.setLayout(new java.awt.GridLayout(6, 7));

        row0col0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row0col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row0col0);

        row0col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        row0col1.setText("jLabel6");
        gameBoard.add(row0col1);

        row0col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row0col2);

        row0col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row0col3);

        row0col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row0col4);

        row0col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row0col5);

        row0col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row0col6);

        row1col0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row1col0);

        row1col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row1col1);

        row1col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row1col2);

        row1col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row1col3);

        row1col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row1col4);

        row1col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row1col5);

        row1col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row1col6);

        row2col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        row2col0.setText("row2col0");
        gameBoard.add(row2col0);

        row2col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row2col1);

        row2col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row2col2);

        row2col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row2col3);

        row2col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row2col4);

        row2col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row2col5);

        row2col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row2col6);

        row3col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row3col0);

        row3col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row3col1);

        row3col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row3col2);

        row3col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row3col3);

        row3col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row3col4);

        row3col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row3col5);

        row3col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row3col6);

        row4col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row4col0);

        row4col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row4col1);

        row4col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row4col2);

        row4col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row4col3);

        row4col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row4col4);

        row4col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row4col5);

        row4col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row4col6);

        row5col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row5col0);

        row5col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row5col1);

        row5col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row5col2);

        row5col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row5col3);

        row5col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row5col4);

        row5col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row5col5);

        row5col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N
        gameBoard.add(row5col6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(492, 492, 492))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(gameBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 1144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1154, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(gameBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        if (count % 2 == 0) {
            playerChosen = playerOne;
            playerImage = "/resources/red_circle_medlar.jpg";
            gameResponse.setText("It is " + playerTwo.getName() + "'s turn. Select a column.");
        }
        else {
            playerChosen = playerTwo;
            playerImage = "/resources/yellow_circle_medlar.jpg";
            gameResponse.setText("It is " + playerOne.getName() + "'s turn. Select a column.");
        }
        
        if (columnOne.isSelected())
        {
            if (!game.isColumnFull(1)) {
                count++;
                playerChosen.addNumMoves();
                row = game.nextAvailableRow(1);
                game.addPiece(1, playerChosen);
                if (row == 0) {
                    row0col0.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 1) {
                    row1col0.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 2) {
                    row2col0.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 3) {
                    row3col0.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 4) {
                    row4col0.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else {
                    row5col0.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
            }
            else {
                gameResponse.setText("Column is full. Choose another column.");
            }
        }
        else if (columnTwo.isSelected())
        {
            if (!game.isColumnFull(2)) {
                count++;
                playerChosen.addNumMoves();
                row = game.nextAvailableRow(2);
                game.addPiece(2, playerChosen);
                if (row == 0) {
                    row0col1.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 1) {
                    row1col1.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 2) {
                    row2col1.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 3) {
                    row3col1.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 4) {
                    row4col1.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else {
                    row5col1.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
            }
            else {
                gameResponse.setText("Column is full. Choose another column.");
            }
        }
        else if (columnThree.isSelected())
        {
            if (!game.isColumnFull(3)) {
                count++;
                playerChosen.addNumMoves();
                row = game.nextAvailableRow(3);
                game.addPiece(3, playerChosen);
                if (row == 0) {
                    row0col2.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 1) {
                    row1col2.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 2) {
                    row2col2.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 3) {
                    row3col2.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 4) {
                    row4col2.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else {
                    row5col2.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
            }
            else {
                gameResponse.setText("Column is full. Choose another column.");
            }
        }
        else if (columnFour.isSelected())
        {
            if (!game.isColumnFull(4)) {
                count++;
                playerChosen.addNumMoves();
                row = game.nextAvailableRow(4);
                game.addPiece(4, playerChosen);
                if (row == 0) {
                    row0col3.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 1) {
                    row1col3.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 2) {
                    row2col3.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 3) {
                    row3col3.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 4) {
                    row4col3.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else {
                    row5col3.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
            }
            else {
                gameResponse.setText("Column is full. Choose another column.");
            }
        }
        else if (columnFive.isSelected())
        {
            if (!game.isColumnFull(5)) {
                count++;
                playerChosen.addNumMoves();
                row = game.nextAvailableRow(5);
                game.addPiece(5, playerChosen);
                if (row == 0) {
                    row0col4.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 1) {
                    row1col4.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 2) {
                    row2col4.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 3) {
                    row3col4.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 4) {
                    row4col4.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else {
                    row5col4.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
            }
            else {
                gameResponse.setText("Column is full. Choose another column.");
            }
        }
        else if (columnSix.isSelected())
        {
            if (!game.isColumnFull(6)) {
                count++;
                playerChosen.addNumMoves();
                row = game.nextAvailableRow(6);
                game.addPiece(6, playerChosen);
                if (row == 0) {
                    row0col5.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 1) {
                    row1col5.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 2) {
                    row2col5.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 3) {
                    row3col5.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 4) {
                    row4col5.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else {
                    row5col5.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
            }
            else {
                gameResponse.setText("Column is full. Choose another column.");
            }
        }
        else
        {
            if (!game.isColumnFull(7)) {
                count++;
                playerChosen.addNumMoves();
                row = game.nextAvailableRow(7);
                game.addPiece(7, playerChosen);
                if (row == 0) {
                    row0col6.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 1) {
                    row1col6.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 2) {
                    row2col6.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 3) {
                    row3col6.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else if (row == 4) {
                    row4col6.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
                else {
                    row5col6.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerImage)));
                }
            }
            else {
                gameResponse.setText("Column is full. Choose another column.");
            }
        }
        
        if (game.isBoardFull()) {
            submit.setEnabled(false);
            gameResponse.setText("Board is full, so it is a draw.");
            restartBox.setVisible(true);
        }
        if (game.isWinner(playerChosen)) {
            submit.setEnabled(false);
            playerChosen.addWinCounter();
            winnerOutput.setText(playerChosen.toString());
            gameResponse.setText(playerChosen.getName() + " wins!");
            restartBox.setVisible(true);
        }
            
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void playAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAgainActionPerformed
        count = 0;
        playerOne.resetNumMoves();
        playerTwo.resetNumMoves();
        playerOne.resetScore();
        playerTwo.resetScore();
        game = new Board(playerOne, playerTwo);
        
        row0col0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        
        row0col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row0col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row0col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row0col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row0col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row0col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row0col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row1col0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row1col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row1col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row1col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row1col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row1col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row1col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row2col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row2col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row2col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row2col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row2col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row2col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row2col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row3col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row3col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row3col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row3col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row3col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row3col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row3col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row4col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row4col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row4col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row4col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row4col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row4col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row4col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row5col0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row5col1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row5col2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row5col3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row5col4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row5col5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        row5col6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/empty_blue_rectangle_medlar.jpg"))); // NOI18N

        gameResponse.setText("It is Player One's turn. Select a column.");
        submit.setEnabled(true);
        restartBox.setVisible(false);
    }//GEN-LAST:event_playAgainActionPerformed

    private void stopGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopGameActionPerformed
        System.exit(0);
    }//GEN-LAST:event_stopGameActionPerformed

    private void nameOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameOkActionPerformed
        String nameOne = responseOne.getText();
        String nameTwo = responseTwo.getText();
        playerOne = new Player(nameOne);
        playerTwo = new Player(nameTwo);
        gameResponse.setText("It is " + playerOne.getName() + "'s turn. Select a column.");
        nameBox.setVisible(false);
    }//GEN-LAST:event_nameOkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConnectFourGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConnectFourGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConnectFourGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConnectFourGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConnectFourGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ColumnSelectors;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JRadioButton columnFive;
    private javax.swing.JRadioButton columnFour;
    private javax.swing.JRadioButton columnOne;
    private javax.swing.JRadioButton columnSeven;
    private javax.swing.JRadioButton columnSix;
    private javax.swing.JRadioButton columnThree;
    private javax.swing.JRadioButton columnTwo;
    private javax.swing.JPanel gameBoard;
    private javax.swing.JLabel gameResponse;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JDialog nameBox;
    private javax.swing.JButton nameOk;
    private javax.swing.JButton playAgain;
    private javax.swing.JLabel playerOneName;
    private javax.swing.JLabel playerTwoName;
    private javax.swing.JLabel question;
    private javax.swing.JTextField responseOne;
    private javax.swing.JTextField responseTwo;
    private javax.swing.JDialog restartBox;
    private javax.swing.JLabel row0col0;
    private javax.swing.JLabel row0col1;
    private javax.swing.JLabel row0col2;
    private javax.swing.JLabel row0col3;
    private javax.swing.JLabel row0col4;
    private javax.swing.JLabel row0col5;
    private javax.swing.JLabel row0col6;
    private javax.swing.JLabel row1col0;
    private javax.swing.JLabel row1col1;
    private javax.swing.JLabel row1col2;
    private javax.swing.JLabel row1col3;
    private javax.swing.JLabel row1col4;
    private javax.swing.JLabel row1col5;
    private javax.swing.JLabel row1col6;
    private javax.swing.JLabel row2col0;
    private javax.swing.JLabel row2col1;
    private javax.swing.JLabel row2col2;
    private javax.swing.JLabel row2col3;
    private javax.swing.JLabel row2col4;
    private javax.swing.JLabel row2col5;
    private javax.swing.JLabel row2col6;
    private javax.swing.JLabel row3col0;
    private javax.swing.JLabel row3col1;
    private javax.swing.JLabel row3col2;
    private javax.swing.JLabel row3col3;
    private javax.swing.JLabel row3col4;
    private javax.swing.JLabel row3col5;
    private javax.swing.JLabel row3col6;
    private javax.swing.JLabel row4col0;
    private javax.swing.JLabel row4col1;
    private javax.swing.JLabel row4col2;
    private javax.swing.JLabel row4col3;
    private javax.swing.JLabel row4col4;
    private javax.swing.JLabel row4col5;
    private javax.swing.JLabel row4col6;
    private javax.swing.JLabel row5col0;
    private javax.swing.JLabel row5col1;
    private javax.swing.JLabel row5col2;
    private javax.swing.JLabel row5col3;
    private javax.swing.JLabel row5col4;
    private javax.swing.JLabel row5col5;
    private javax.swing.JLabel row5col6;
    private javax.swing.JButton stopGame;
    private javax.swing.JButton submit;
    private javax.swing.JLabel title;
    private javax.swing.JLabel winnerOutput;
    // End of variables declaration//GEN-END:variables
}
